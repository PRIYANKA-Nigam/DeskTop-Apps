package medical;

import java.awt.EventQueue;

import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import java.awt.Color;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

import java.awt.Font;
import java.awt.Image;
import javax.swing.JTextField;
import javax.swing.JPasswordField;
import javax.swing.JTextPane;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.JSeparator;
import javax.swing.table.DefaultTableModel;

import com.mysql.cj.xdevapi.Statement;

import javax.swing.JScrollPane;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;

public class Docter extends JFrame {

	private JPanel contentPane;
	private JTextField textField;
	private JTextField textField_1;
	private JTextField textField_2;
	private JTable table;
	Connection con = null;
	Statement St = null;
	ResultSet Rt = null;
	private JTextField textField_3;
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Docter frame = new Docter();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public Docter() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 856, 800);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JPanel panel = new JPanel();
		panel.setBackground(new Color(0, 0, 0));
		panel.setBounds(10, 11, 820, 84);
		contentPane.add(panel);
		panel.setLayout(null);
		
		JLabel lblNewLabel = new JLabel("Hospital Management System");
		lblNewLabel.setForeground(Color.WHITE);
		lblNewLabel.setFont(new Font("Tahoma", Font.BOLD, 25));
		lblNewLabel.setBackground(Color.WHITE);
		lblNewLabel.setBounds(168, 11, 434, 36);
		panel.add(lblNewLabel);
		
		JLabel lblNewLabel_1 = new JLabel("Manage Docters");
		lblNewLabel_1.setFont(new Font("Tahoma", Font.BOLD | Font.ITALIC, 14));
		lblNewLabel_1.setForeground(new Color(255, 255, 255));
		lblNewLabel_1.setBackground(new Color(255, 255, 255));
		lblNewLabel_1.setBounds(260, 58, 196, 28);
		panel.add(lblNewLabel_1);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBounds(10, 106, 820, 624);
		contentPane.add(panel_1);
		panel_1.setLayout(null);
		
		JLabel lblNewLabel_2 = new JLabel("HMS");
		lblNewLabel_2.setFont(new Font("Tahoma", Font.BOLD, 18));
		lblNewLabel_2.setBounds(360, 0, 52, 25);
		panel_1.add(lblNewLabel_2);
		
		JLabel img = new JLabel("img");
		img.setBounds(290, 20, 200, 100);
		ImageIcon im = new javax.swing.ImageIcon("Image/aid.jpg");
//		Image i = im.getImage().getScaledInstance(200, 150, Image.SCALE_SMOOTH);
		img.setIcon(im);
		panel_1.add(img);
		
		JLabel lblNewLabel_3 = new JLabel("ID");
		lblNewLabel_3.setFont(new Font("Tahoma", Font.BOLD, 15));
		lblNewLabel_3.setBounds(40, 130, 46, 25);
		panel_1.add(lblNewLabel_3);
		
		JLabel lblNewLabel_4 = new JLabel("Name");
		lblNewLabel_4.setFont(new Font("Tahoma", Font.BOLD, 15));
		lblNewLabel_4.setBounds(40, 160, 52, 25);
		panel_1.add(lblNewLabel_4);
		
		textField = new JTextField();
		textField.setBounds(117, 135, 116, 20);
		panel_1.add(textField);
		textField.setColumns(10);
		
		textField_1 = new JTextField();
		textField_1.setBounds(117, 160, 116, 20);
		panel_1.add(textField_1);
		textField_1.setColumns(10);
		
		JLabel lblNewLabel_5 = new JLabel("Password");
		lblNewLabel_5.setFont(new Font("Tahoma", Font.BOLD, 15));
		lblNewLabel_5.setBounds(340, 135, 80, 14);
		panel_1.add(lblNewLabel_5);
		
		JLabel lblNewLabel_6 = new JLabel("Experience");
		lblNewLabel_6.setFont(new Font("Tahoma", Font.BOLD, 15));
		lblNewLabel_6.setBounds(340, 160, 90, 14);
		panel_1.add(lblNewLabel_6);
		
		textField_2 = new JTextField();
		textField_2.setBounds(462, 160, 122, 20);
		panel_1.add(textField_2);
		textField_2.setColumns(10);
		
		textField_3 = new JTextField();
		textField_3.setBounds(462, 134, 122, 20);
		panel_1.add(textField_3);
		textField_3.setColumns(10);
		
		JButton btnNewButton = new JButton("ADD");
		btnNewButton.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				try {
					con=DriverManager.getConnection("jdbc:mysql://localhost:3306/dummy","root","");
					PreparedStatement add = con.prepareStatement("insert into docter values(?,?,?,?)");
					add.setInt(1, Integer.valueOf(textField.getText()));
					add.setString(2, textField_1.getText());
					add.setString(3,textField_3.getText());
					add.setInt(4, Integer.valueOf(textField_2.getText()));
					int row = add.executeUpdate();
					JOptionPane.showMessageDialog(null, "Docter Added Successfully ...","Table Insertion",JOptionPane.PLAIN_MESSAGE);
					con.close();
					Selectional();
				}catch(Exception e1) {
					e1.printStackTrace();
					
				}
			}
		});
		btnNewButton.setFont(new Font("Tahoma", Font.BOLD, 15));
		btnNewButton.setBounds(168, 200, 89, 23);
		panel_1.add(btnNewButton);
		
		JButton btnNewButton_1 = new JButton("UPDATE");
		btnNewButton_1.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				if(textField.getText().isEmpty()||textField_1.getText().isEmpty()||textField_2.getText().isEmpty()||textField_3.getText().isEmpty()) {
					JOptionPane.showMessageDialog(null, "Some Information seems missing.!!! Please fill all the required fields.","Table Updation",JOptionPane.PLAIN_MESSAGE);
				}else {
					try {
						con=DriverManager.getConnection("jdbc:mysql://localhost:3306/dummy","root","");
						String q = "update docter set name='"+textField_1.getText()+"'"+","+"password='"+textField_3.getText()+"'"+","+"experience='"
						+textField_2.getText()+"' where id="+textField.getText()+";";
						java.sql.Statement s =con.createStatement();
						s.executeUpdate(q);
						JOptionPane.showMessageDialog(null, "Docter info updated successfully ...","Table Updation",JOptionPane.PLAIN_MESSAGE);
						Selectional();
					}catch(Exception e1) {
						e1.printStackTrace();
					}
				}
			}
		});
		btnNewButton_1.setFont(new Font("Tahoma", Font.BOLD, 15));
		btnNewButton_1.setBounds(260, 200, 106, 23);
		panel_1.add(btnNewButton_1);
		
		JButton btnNewButton_2 = new JButton("DELETE");
		btnNewButton_2.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				if(textField.getText().isEmpty()) {
					JOptionPane.showMessageDialog(null, "select the docter to be deleted ...","Table Deletion",JOptionPane.PLAIN_MESSAGE);
				}else {
					try {
						con=DriverManager.getConnection("jdbc:mysql://localhost:3306/dummy","root","");
						String id = textField.getText();
						String Query = "Delete from docter where id="+id;
						java.sql.Statement s =  con.createStatement();
						s.executeUpdate(Query);
						Selectional();
						JOptionPane.showMessageDialog(null, "Docter successfully deleted ...","Table Deletion",JOptionPane.PLAIN_MESSAGE);
					} catch (SQLException e1) {
						e1.printStackTrace();
					}	
				}
			}
		});
		btnNewButton_2.setFont(new Font("Tahoma", Font.BOLD, 15));
		btnNewButton_2.setBounds(369, 200, 106, 23);
		panel_1.add(btnNewButton_2);
		
		JButton btnNewButton_3 = new JButton("CLEAR");
		btnNewButton_3.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				textField.setText("");
				textField_1.setText("");
				textField_2.setText("");
				textField_3.setText("");
			}
		});
		btnNewButton_3.setFont(new Font("Tahoma", Font.BOLD, 15));
		btnNewButton_3.setBounds(485, 200, 89, 23);
		panel_1.add(btnNewButton_3);
		
		JLabel lblNewLabel_7 = new JLabel("Docters Information");
		lblNewLabel_7.setFont(new Font("Tahoma", Font.BOLD, 15));
		lblNewLabel_7.setBounds(314, 240, 176, 20);
		panel_1.add(lblNewLabel_7);
		
		JSeparator separator = new JSeparator();
		separator.setForeground(new Color(160, 160, 160));
		separator.setBackground(new Color(0, 0, 0));
		separator.setBounds(314, 260, 161, 10);
		panel_1.add(separator);
		
		JScrollPane scrollPane = new JScrollPane();
		scrollPane.setBounds(0, 270, 810, 290);
		panel_1.add(scrollPane);
		
		table = new JTable();
		table.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				DefaultTableModel df =(DefaultTableModel)table.getModel();
				int selected = table.getSelectedRow();
				textField.setText(df.getValueAt(selected, 0).toString());
				textField_1.setText(df.getValueAt(selected, 1).toString());
				textField_3.setText(df.getValueAt(selected, 2).toString());
				textField_2.setText(df.getValueAt(selected, 3).toString());
			}
		});
		scrollPane.setViewportView(table);
		table.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"ID", "NAME", "PASSWORD", "EXPERIENCE"
			}
		));
		
		JButton btnNewButton_4 = new JButton("HOME");
		btnNewButton_4.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				System.exit(0);
			}
		});
		btnNewButton_4.setFont(new Font("Tahoma", Font.BOLD, 15));
		btnNewButton_4.setBounds(341, 571, 89, 23);
		panel_1.add(btnNewButton_4);
		
		JPanel panel_2 = new JPanel();
		panel_2.setBounds(3, 605, 807, 60);
		panel_1.add(panel_2);
		panel_2.setBackground(new Color(0, 0, 0));
		
		Selectional();
	}
	private void Selectional() {
		try { int a;
			con=DriverManager.getConnection("jdbc:mysql://localhost:3306/dummy","root","");
//			St =(Statement) con.createStatement();
//		    Rt = ((java.sql.Statement) St).executeQuery("select * from docter");
//		    table.setModel(DbUtils.resultSetToTableModel(Rt));
			PreparedStatement ps = con.prepareStatement("select * from docter");
			ResultSet rs =ps.executeQuery();
			ResultSetMetaData rd =(ResultSetMetaData)rs.getMetaData();
			a= rd.getColumnCount();
			DefaultTableModel df =(DefaultTableModel)table.getModel();
			df.setRowCount(0);
			while(rs.next()) {
				Vector v = new Vector();
				for(int i=1;i<=a;i++) {
					v.add(rs.getString("id"));
					v.add(rs.getString("name"));
					v.add(rs.getString("password"));
					v.add(rs.getString("experience"));
				}
				df.addRow(v);
			}
		}catch(Exception e) {
			e.printStackTrace();
		}
	}
}
